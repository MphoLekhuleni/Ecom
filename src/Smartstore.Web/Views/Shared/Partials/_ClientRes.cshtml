@{
    var clientResKeys = new[]
    {
        "Common.Notification",
        "Common.Close",
        "Common.On",
        "Common.OK",
        "Common.Cancel",
        "Common.Off",
        "Common.Exit",
        "Common.CtrlKey",
        "Common.ShiftKey",
        "Common.AltKey",
        "Common.DelKey",
        "Common.EnterKey",
        "Common.EscKey",
        "Products.Longdesc.More",
        "Products.Longdesc.Less",
        "Jquery.Validate.Email",
        "Jquery.Validate.Required",
        "Jquery.Validate.Remote",
        "Jquery.Validate.Url",
        "Jquery.Validate.Date",
        "Jquery.Validate.DateISO",
        "Jquery.Validate.Number",
        "Jquery.Validate.Digits",
        "Jquery.Validate.Creditcard",
        "Jquery.Validate.Equalto",
        "Jquery.Validate.Maxlength",
        "Jquery.Validate.Minlength",
        "Jquery.Validate.Rangelength",
        "jquery.Validate.Range",
        "Jquery.Validate.Max",
        "Jquery.Validate.Min",
        "Admin.Common.AreYouSure",
        "Admin.Common.AskToProceed",
        "FileUploader.Dropzone.Message",
        "FileUploader.Dropzone.DictDefaultMessage",
        "FileUploader.Dropzone.DictFallbackMessage",
        "FileUploader.Dropzone.DictFallbackText",
        "FileUploader.Dropzone.DictFileTooBig",
        "FileUploader.Dropzone.DictInvalidFileType",
        "FileUploader.Dropzone.DictResponseError",
        "FileUploader.Dropzone.DictCancelUpload",
        "FileUploader.Dropzone.DictUploadCanceled",
        "FileUploader.Dropzone.DictCancelUploadConfirmation",
        "FileUploader.Dropzone.DictRemoveFile",
        "FileUploader.Dropzone.DictMaxFilesExceeded",
        "FileUploader.StatusWindow.Uploading.File",
        "FileUploader.StatusWindow.Uploading.Files",
        "FileUploader.StatusWindow.Complete.File",
        "FileUploader.StatusWindow.Complete.Files",
        "FileUploader.StatusWindow.Canceled.File",
        "FileUploader.StatusWindow.Canceled.Files"
    };
}

<script sm-target-zone="head_scripts" data-origin="client-res">
	window.Res = {
		@foreach (var key in clientResKeys) { <text>"@(Html.Raw(key))": @(T(key).JsValue),</text> }
    };

    window.ClientId = "@WorkContext.CurrentCustomer.CustomerGuid";
</script>

<script sm-target-zone="end">
    $.extend($.validator.messages, {
        required: window.Res["Jquery.Validate.Required"],
        remote: window.Res["Jquery.Validate.Remote"],
        email: window.Res["Jquery.Validate.Email"],
        url: window.Res["Jquery.Validate.Url"],
        date: window.Res["Jquery.Validate.Date"],
        dateISO: window.Res["Jquery.Validate.DateISO"],
        number: window.Res["Jquery.Validate.Number"],
        digits: window.Res["Jquery.Validate.Digits"],
        creditcard: window.Res["Jquery.Validate.Creditcard"],
        equalTo: window.Res["Jquery.Validate.Equalto"],
        extension: window.Res["Jquery.Validate.Extension"],
        maxlength: $.validator.format(window.Res["Jquery.Validate.Maxlength"]),
        minlength: $.validator.format(window.Res["Jquery.Validate.Minlength"]),
        rangelength: $.validator.format(window.Res["Jquery.Validate.Rangelength"]),
        range: $.validator.format(window.Res["Jquery.Validate.Range"]),
        max: $.validator.format(window.Res["Jquery.Validate.Max"]),
        min: $.validator.format(window.Res["Jquery.Validate.Min"])
    });
</script>
